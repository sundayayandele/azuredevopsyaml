trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: ApplyK8sConfigs
  displayName: 'Apply Kubernetes Configurations'
  steps:
  - task: UseK8s@1
    inputs:
      kubeconfig: '$(KUBECONFIG)'  # Assuming you have set up the KUBECONFIG as a secret or variable in Azure DevOps
  - script: |
      FILES=("alert/deploy.yaml" "alert/svc.yaml" "alert/configmap.yaml" "alert/templateconfig.yaml")

      for FILE in "${FILES[@]}"; do
        kubectl apply -f "$FILE"
        if [ $? -ne 0 ]; then
          echo "Failed to apply $FILE"
        else
          echo "Successfully applied $FILE"
        fi
      done
    displayName: 'Apply Kubernetes YAML files'
    env:
      KUBECONFIG: $(KUBECONFIG)  # This assumes you have set up KUBECONFIG as a pipeline variable or secret




=====================================
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: ApplyK8sConfigs
  displayName: 'Apply Kubernetes Configurations'
  steps:
  - script: |
      FILES=("alert/deploy.yaml" "alert/svc.yaml" "alert/configmap.yaml" "alert/templateconfig.yaml")

      for FILE in "${FILES[@]}"; do
        kubectl apply -f "$FILE"
        if [ $? -ne 0 ]; then
          echo "Failed to apply $FILE"
        else
          echo "Successfully applied $FILE"
        fi
      done
    displayName: 'Apply Kubernetes YAML files'
    env:
      KUBECONFIG: $(KUBECONFIG)  # Assuming you have set up the KUBECONFIG as a secret or variable in Azure DevOps

  - task: Kubernetes@1
    inputs:
      connectionType: 'Kubeconfig'
      kubeconfig: '$(KUBECONFIG)'
      command: 'apply'
      arguments: '-f alert/'
    displayName: 'Apply Kubernetes YAML files'
